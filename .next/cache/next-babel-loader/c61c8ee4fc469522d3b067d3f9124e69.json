{"ast":null,"code":"var _jsxFileName = \"/home/gksdudxkr/\\uC81C\\uB85C\\uCD08/madehomepagetest/pages/GuidanceStore.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport { Row, Col, Typography, Carousel, Card, Divider } from 'antd';\nimport variable from \"../components/textvariable\";\nconst {\n  ForGuidanceStoreArray\n} = variable;\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nclass GuidanceStore extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"onmarkerclick\", (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        infosindow: marker.name,\n        redirect: true\n      }); //버튼을 눌렀을 경우 axios로 this.state.activeMarker.title를 서버로 보내고\n      // 그에 해당하는 값을 클라이언트에 보내 페이지를 구성하면 된다 \n    });\n\n    _defineProperty(this, \"onmapclick\", props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    });\n\n    _defineProperty(this, \"buttonredirect\", e => {\n      this.setState({\n        redirect: false\n      });\n      console.log(this.state.redirect);\n    });\n\n    this.state = {\n      eventlist: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      infosindow: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    const mapStyles = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    const DisplayArray = ForGuidanceStoreArray.map((result, key) => {\n      const Info = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 26\n        }\n      }, \"\\uB9E4\\uC7A5\\uC774\\uB984 :   \", result.store, \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }), \"   \\uC8FC\\uC18C :   \", result.localaddress);\n\n      const InfoChild = __jsx(\"div\", {\n        style: {\n          color: \"#000000\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"\\uB9E4\\uC7A5\\uC774\\uB984 :   \", result.store), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"\\uC8FC\\uC18C :   \", result.localaddress), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, \"\\uB9E4\\uCD9C :   \", result.sales), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, \"\\uC9C0\\uC810\\uC7A5 :  \", result.지점장));\n\n      return __jsx(Col, {\n        span: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        hoverable: true,\n        style: {\n          width: \"100%\"\n        },\n        cover: result.picture,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, __jsx(Meta, {\n        title: Info,\n        description: InfoChild,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      })));\n    });\n    const LocalMarkers = ForGuidanceStoreArray.map((result, i) => {\n      const Info = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 26\n        }\n      }, \"\\uB9E4\\uC7A5\\uC774\\uB984 :   \", result.store, \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }\n      }), \"   \\uC8FC\\uC18C :   \", result.localaddress);\n\n      return __jsx(Marker, {\n        key: i++,\n        name: Info,\n        title: \"1987LOOPTOP\",\n        position: {\n          lat: result.maplat,\n          lng: result.maplng\n        },\n        onClick: this.onmarkerclick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      });\n    });\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: \"#000000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, __jsx(Carousel, {\n      autoplay: true,\n      effect: \"fade\",\n      style: {\n        textAlign: \"center\",\n        height: \"400px\",\n        lineHeight: \"200px\",\n        background: \"#364d79\",\n        overflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"1\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"2\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"3\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"4\"))), __jsx(Row, {\n      gutter: [{\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }, {\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }],\n      style: {\n        padding: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      span: 24,\n      style: {\n        height: \"800px\",\n        marginBottom: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, __jsx(Map, {\n      google: this.props.google,\n      zoom: 8 //14\n      ,\n      style: mapStyles,\n      initialCenter: {\n        lat: 37.52643587,\n        lng: 126.87600409\n      },\n      onClick: this.onmapclick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, LocalMarkers, __jsx(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      content: \"<div>\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      id: \"iwc\",\n      style: {\n        color: \"#000000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, this.state.infosindow)))), __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 16\n      }\n    })), __jsx(Divider, {\n      orientation: \"left\",\n      style: {\n        borderColor: '#ffffff',\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), __jsx(Row, {\n      gutter: [{\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }, {\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }],\n      style: {\n        padding: \"100px\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, DisplayArray), __jsx(Divider, {\n      orientation: \"left\",\n      style: {\n        borderColor: '#ffffff',\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCgl0XB4EdBHtmyB4P7Pu4HbnM3gndzyiY\"\n})(GuidanceStore);","map":{"version":3,"sources":["/home/gksdudxkr/제로초/madehomepagetest/pages/GuidanceStore.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Row","Col","Typography","Carousel","Card","Divider","variable","ForGuidanceStoreArray","Title","Meta","GuidanceStore","Component","constructor","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","infosindow","name","redirect","state","console","log","eventlist","render","mapStyles","width","height","DisplayArray","map","result","key","Info","store","localaddress","InfoChild","color","sales","지점장","picture","LocalMarkers","i","lat","maplat","lng","maplng","onmarkerclick","backgroundColor","textAlign","lineHeight","background","overflow","xs","sm","md","lg","padding","marginBottom","google","onmapclick","borderColor","margin","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper,Marker,InfoWindow } from \"google-maps-react\"\nimport { Row, Col,Typography,Carousel,Card,Divider } from 'antd';\nimport variable from \"../components/textvariable\"\n\nconst { ForGuidanceStoreArray } = variable\nconst { Title } = Typography;\nconst { Meta } = Card;\n\n\n\nclass GuidanceStore extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n          eventlist:[],\n          showingInfoWindow: false,\n          activeMarker: {},\n          selectedPlace: {},\n          infosindow:\"\",\n          redirect:false\n        }\n      }\n\n\n    onmarkerclick=(props,marker, e)=>{\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n            infosindow:marker.name,\n            redirect:true\n        });\n        //버튼을 눌렀을 경우 axios로 this.state.activeMarker.title를 서버로 보내고\n        // 그에 해당하는 값을 클라이언트에 보내 페이지를 구성하면 된다 \n      }\n\n      onmapclick=(props)=>{\n          if(this.state.showingInfoWindow){\n              this.setState({\n                  showingInfoWindow:false,\n                  activeMarker:null\n              })\n          }\n      }\n\n      buttonredirect=(e)=>{\n        this.setState({\n          redirect:false\n        })\n        console.log(this.state.redirect)\n      }\n\n\n    render(){\n        const mapStyles = {\n            width: \"100%\",\n            height: \"100%\",\n        };\n        \n        const DisplayArray = ForGuidanceStoreArray.map((result,key)=>{\n            const Info = <div>\n                매장이름 :   {result.store} <br />   주소 :   {result.localaddress}\n            </div>;\n            const InfoChild = \n            <div style={{color:\"#000000\"}}>\n                <div>\n                    매장이름 :   {result.store}\n                </div>\n                <div>\n                    주소 :   {result.localaddress}\n                </div>\n                <div>\n                    매출 :   {result.sales}\n                </div>\n                <div>\n                    지점장 :  {result.지점장}\n                </div>\n            </div>\n            return(\n                <Col span={6}>\n                    <Card\n                    hoverable\n                    style={{ width: \"100%\" }}\n                    cover={result.picture}\n                    >\n                        <Meta title={Info} description={InfoChild} />\n                    </Card>\n                </Col>\n            )\n        })\n        \n        const LocalMarkers = ForGuidanceStoreArray.map((result,i)=>{\n            const Info = <div>\n                매장이름 :   {result.store} <br />   주소 :   {result.localaddress}\n            </div>\n            return(\n                <Marker key={i++}\n                    name={Info }\n                    title= \"1987LOOPTOP\"\n                    position={{ lat:result.maplat, lng:result.maplng }}\n                    onClick={this.onmarkerclick}\n                />\n            )\n        })\n\n\n\n    return(\n        <div style={{backgroundColor:\"#000000\"}} >\n            <Carousel autoplay effect=\"fade\" style={{textAlign: \"center\",height: \"400px\",lineHeight: \"200px\",background: \"#364d79\",overflow: \"hidden\"}}>\n                <div>\n                    <h3>1</h3>\n                </div>\n                <div>\n                    <h3>2</h3>\n                </div>\n                <div>\n                    <h3>3</h3>\n                </div>\n                <div>\n                    <h3>4</h3>\n                </div>\n            </Carousel>\n            <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 },{ xs: 8, sm: 16, md: 24, lg: 32 }]} style={{padding:\"100px\"}} >\n                <Col span={24} style={{height:\"800px\", marginBottom:\"50px\"}}>\n                    <Map\n                        google = {this.props.google}\n                        zoom={8} //14\n                        style={mapStyles}\n                        initialCenter={{ lat:37.52643587, lng:126.87600409 }}\n                        onClick={this.onmapclick}\n                    >\n                        {LocalMarkers}\n                            <InfoWindow \n                                marker={this.state.activeMarker}\n                                visible={this.state.showingInfoWindow}\n                                content=\"<div>\"\n                            >\n                                <div id=\"iwc\" style={{color:\"#000000\"}}>\n                                {this.state.infosindow}\n                                </div>\n                            </InfoWindow>\n                    </Map>\n                  </Col>\n               <Col>\n               </Col>\n            </Row>\n            <Divider orientation=\"left\" style={{borderColor: '#ffffff',margin:\"0px\" }}>\n            </Divider>\n            <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 },{ xs: 8, sm: 16, md: 24, lg: 32 }]} style={{padding:\"100px\",margin:\"0px\"}} >\n            {DisplayArray}\n            </Row>\n            <Divider orientation=\"left\" style={{borderColor: '#ffffff',margin:\"0px\" }}>\n            </Divider>\n        </div>\n    )\n    }\n}\n\n\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyCgl0XB4EdBHtmyB4P7Pu4HbnM3gndzyiY\"\n})(GuidanceStore);"]},"metadata":{},"sourceType":"module"}