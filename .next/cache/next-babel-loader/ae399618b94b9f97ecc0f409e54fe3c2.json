{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport { Row, Col, Typography, Carousel, Card } from 'antd';\nimport variable from \"../components/textvariable\";\nconst {\n  ForGuidanceStoreArray\n} = variable;\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nclass GuidanceStore extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"onmarkerclick\", (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        infosindow: marker.name,\n        redirect: true\n      }); //버튼을 눌렀을 경우 axios로 this.state.activeMarker.title를 서버로 보내고\n      // 그에 해당하는 값을 클라이언트에 보내 페이지를 구성하면 된다 \n    });\n\n    _defineProperty(this, \"onmapclick\", props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    });\n\n    _defineProperty(this, \"buttonredirect\", e => {\n      this.setState({\n        redirect: false\n      });\n      console.log(this.state.redirect);\n    });\n\n    this.state = {\n      eventlist: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      infosindow: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    const mapStyles = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    const DisplayArray = ForGuidanceStoreArray.map((result, key) => {\n      const Info = __jsx(\"div\", null, \"\\uB9E4\\uC7A5\\uC774\\uB984 :   \", result.store, \" \", __jsx(\"br\", null), \"   \\uC8FC\\uC18C :   \", result.localaddress);\n\n      const InfoChild = __jsx(\"div\", {\n        style: {\n          color: \"#000000\"\n        }\n      }, __jsx(\"div\", null, \"\\uB9E4\\uC7A5\\uC774\\uB984 :   \", result.store), __jsx(\"div\", null, \"\\uC8FC\\uC18C :   \", result.localaddress), __jsx(\"div\", null, \"\\uB9E4\\uCD9C :   \", result.sales), __jsx(\"div\", null, \"\\uC9C0\\uC810\\uC7A5 :  \", result.지점장));\n\n      return __jsx(Col, {\n        span: 6\n      }, __jsx(Card, {\n        hoverable: true,\n        style: {\n          width: \"100%\"\n        },\n        cover: __jsx(\"img\", {\n          alt: \"\\uB9E4\\uC7A5\\uC774\\uB984\",\n          src: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n        })\n      }, __jsx(Meta, {\n        title: Info,\n        description: InfoChild\n      })));\n    });\n    const LocalMarkers = ForGuidanceStoreArray.map((result, i) => {\n      const Info = __jsx(\"div\", null, \"\\uB9E4\\uC7A5\\uC774\\uB984 :   \", result.store, \" \", __jsx(\"br\", null), \"   \\uC8FC\\uC18C :   \", result.localaddress);\n\n      return __jsx(Marker, {\n        key: i++,\n        name: Info,\n        title: \"1987LOOPTOP\",\n        position: {\n          lat: result.maplat,\n          lng: result.maplng\n        },\n        onClick: this.onmarkerclick\n      });\n    });\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: \"#000000\"\n      }\n    }, __jsx(Carousel, {\n      autoplay: true,\n      effect: \"fade\",\n      style: {\n        textAlign: \"center\",\n        height: \"350px\",\n        lineHeight: \"200px\",\n        background: \"#364d79\",\n        overflow: \"hidden\"\n      }\n    }, __jsx(\"div\", null, __jsx(\"h3\", null, \"1\")), __jsx(\"div\", null, __jsx(\"h3\", null, \"2\")), __jsx(\"div\", null, __jsx(\"h3\", null, \"3\")), __jsx(\"div\", null, __jsx(\"h3\", null, \"4\"))), __jsx(Row, {\n      gutter: [{\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }, {\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }],\n      style: {\n        padding: \"100px\"\n      }\n    }, __jsx(Col, {\n      span: 24,\n      style: {\n        height: \"800px\",\n        marginBottom: \"50px\"\n      }\n    }, __jsx(Map, {\n      google: this.props.google,\n      zoom: 8 //14\n      ,\n      style: mapStyles,\n      initialCenter: {\n        lat: 37.52643587,\n        lng: 126.87600409\n      },\n      onClick: this.onmapclick\n    }, LocalMarkers, __jsx(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      content: \"<div>\"\n    }, __jsx(\"div\", {\n      id: \"iwc\",\n      style: {\n        color: \"#000000\"\n      }\n    }, this.state.infosindow)))), __jsx(Col, null)), __jsx(Row, {\n      gutter: [{\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }, {\n        xs: 8,\n        sm: 16,\n        md: 24,\n        lg: 32\n      }],\n      style: {\n        padding: \"100px\"\n      }\n    }, DisplayArray));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCgl0XB4EdBHtmyB4P7Pu4HbnM3gndzyiY\"\n})(GuidanceStore);","map":null,"metadata":{},"sourceType":"module"}